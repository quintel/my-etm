<%= content_for(:page_title, t('.title')) %>
<%= content_for(:title, t('.title')) %>
<%= content_for(:menu_title, t('.title')) %>
<% render partial: 'identity/sidebar' %>

<%= render(Identity::PageHeaderComponent.new(title: t('.title'), message: t('.explanation'))) %>

<h3 class="text-midnight-800 mb-5 mt-5 pt-5 border-t"><%= t('.account') %></h3>

<%= render(Identity::ProfileRowComponent.new(title: "")) do |row| %>
  <%= render(Identity::ProfileEmailComponent.new(title: t('activerecord.attributes.user.email'), email: current_user.email, confirmed: true, show_change_button: false)) %>
  <% if current_user.pending_reconfirmation? %>
    <%= render(Identity::ProfileEmailComponent.new(title: t('activerecord.attributes.user.unconfirmed_email'), email: current_user.unconfirmed_email, confirmed: false, show_change_button: false)) %>
  <% end %>

  <% row.with_button do %>
    <%= link_to identity_edit_email_path, data: { turbo_frame: :modal }, class: button_classes("my-auto !px-2 h-8", color: :border) do %>
      <%= heroicon 'pencil', options: { class: 'w-4 h-4 text-midnight-800' } %>
    <% end %>
  <% end %>
<% end %>

<%= render(Identity::ProfileRowComponent.new(title: t('activerecord.attributes.user.password'))) do |row| %>
  <span class="tracking-wider">&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;</span>
  <% row.with_message do %>
    <p>
      <%= t('.password_explanation_html', tokens_path: identity_tokens_path) %>
    </p>
  <% end %>

  <% row.with_button do %>
    <%= link_to identity_edit_password_path, data: { turbo_frame: :modal }, class: button_classes("-mt-0.5 !px-2 h-8", color: :border) do %>
      <%= heroicon 'pencil', options: { class: 'w-4 h-4 text-midnight-800' } %>
    <% end %>
  <% end %>
<% end %>

<h3 class="text-midnight-800 mb-5 mt-5 pt-5 border-t"><%= t('.profile') %></h3>

<%= render(Identity::ProfileRowComponent.new(title: t('activerecord.attributes.user.name'))) do |row| %>
  <%= current_user.name %>

  <% row.with_message do %>
    <p>
      <%= t('.name_explanation') %>
    </p>
  <% end %>

  <% row.with_button do %>
    <%= link_to identity_edit_name_path, data: { turbo_frame: :modal }, class: button_classes("-mt-0.5 !px-2 h-8", color: :border) do %>
      <%= heroicon 'pencil', options: { class: 'w-4 h-4 text-midnight-800' } %>
    <% end %>
  <% end %>
<% end %>

<h3 class="text-midnight-800 mb-5 mt-5 pt-5 border-t"><%= t('.settings') %></h3>

<%= render(Identity::ProfileRowComponent.new(title: t('.privacy.title'))) do |row| %>
  <% row.with_message do %>
    <p>
      <%= t('.privacy.choose') %>
    </p>
    <p>
      <%= t('.privacy.public_vs_private') %>
    </p>
  <% end %>

  <% row.with_button do %>
    <%= turbo_frame_tag :scenario_privacy_setting do %>
      <%= render(Identity::ScenarioPrivacyComponent.new(private: current_user.private_scenarios?)) %>
    <% end %>
  <% end %>
<% end %>

<% if MyEtm::Mailchimp.enabled? %>
  <% [:changelog].each do |audience| %>
    <%= turbo_frame_tag audience, src: identity_edit_subscription_path(audience: audience) do %>
      <%= render(Identity::ProfileRowComponent.new(title: t("identity.newsletter_status_row_component.title.#{audience}", audience: t("identity.audience.#{audience}")))) do |row| %>
        <%= heroicon 'ellipsis-horizontal', options: { class: 'w-4 h-4' } %>

        <% row.with_message do %>
          <div class="flex gap-1">
            <div class="w-1/4 bg-gray-300 h-4 animate-pulse mb-1 rounded"></div>
            <div class="w-1/6 bg-gray-300 h-4 animate-pulse mb-1 rounded"></div>
            <div class="w-1/2 bg-gray-300 h-4 animate-pulse mb-1 rounded"></div>
          </div>
          <div class="flex gap-1">
            <div class="w-1/3 bg-gray-300 h-4 animate-pulse rounded"></div>
            <div class="w-1/6 bg-gray-300 h-4 animate-pulse rounded"></div>
          </div>
        <% end %>

        <% row.with_button do %>
          <%= button_tag t("identity.newsletter_status_row_component.subscribe", audience: t("identity.audience.#{audience}")), disabled: true, class: button_classes(color: :default_colored) %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<%= render(Identity::ProfileRowComponent.new(title: t('devise.registrations.confirm_destroy.title'))) do |row| %>
  <% row.with_message do %>
    <p>
      <%= t('devise.registrations.confirm_destroy.information') %>
    </p>
  <% end %>

  <% row.with_button do %>
    <%= link_to delete_account_path, class: button_classes('text-sm text-red-600 hover:text-red-700 active:text-red-700 flex mb-2'), data: { turbo_frame: :modal } do %>
      <%= heroicon 'trash', options: { class: 'w-5 h-5 mr-2' } %>
      <%= t('devise.registrations.confirm_destroy.title') %>
    <% end %>
  <% end %>
<% end %>
