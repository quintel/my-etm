<%= render(ModalComponent.new(title: t('.title'))) do |modal| %>
  <%= turbo_frame_tag :delete_account_form do %>
    <%= form_for(current_user, url: user_registration_path, html: { method: :delete, data: { turbo: false } }) do |f| %>
      <div class="flex-col mb-10 px-8">
        <div class="flex text-red-600 mb-5">
          <span class="mr-5"><%= heroicon 'exclamation-triangle', options: { class: 'w-6 h-6' } %></span>
          <span class="text-base">
            <%= t('.warning_header') %>
          </span>
        </div>
        <p class="mb-2">
          <%= t('.warning') %>
        </p>
        <p class="mb-2">
          <%= t('.will_remove') %>
        </p>
        <ul class="mb-2 list-disc ml-8">
          <li><%= t('.entities.data') %></li>

          <% if @counts[:saved_scenarios].positive? %>
            <li>
              <%= t('.entities.saved_scenario', count: @counts[:saved_scenarios]) %>
            </li>
          <% end %>

          <%# <% if @counts[:scenarios].positive? %>
            <%# <li>
              <%= t('.entities.scenario', count: @counts[:scenarios]) %>
            <%# </li> %>
          <%# <% end %>

          <% if @counts[:collections].positive? %>
            <li>
              <%= t('.entities.collection', count: @counts[:collections]) %>
            </li>
          <% end %>

          <% if @counts[:personal_access_tokens].positive? %>
            <li>
              <%= t('.entities.personal_access_token', count: @counts[:personal_access_tokens]) %>
            </li>
          <% end %>

          <% if @counts[:oauth_applications].positive? %>
            <li>
              <%= t('.entities.oauth_application', count: @counts[:oauth_applications]) %>
            </li>
          <% end %>
        </ul>

        <p class="text-sm text-midnight-450 pt-2">
          <%= t('.irreversible') %>
        </p>
      </div>
      <%= render(FormSteps::WrapperComponent.new) do |steps| %>
        <%= render(FormSteps::RowComponent.new(title: t('activerecord.attributes.user.password'), hint: t('.confirm'), label_for: "user_current_password")) do |row| %>
          <div class="relative">
            <%= render(PasswordFieldComponent.new(form: f, name: :current_password, class: "field", required: true, autofocus: "true", autocomplete: 'current-password')) %>
          </div>

          <% row.icon { heroicon 'identification', options: { class: 'w-5 h-5' } } %>

          <% row.after_hint do %>
            <%= render(FieldErrorsComponent.new(record: current_user, attribute: :current_password)) %>
          <% end %>
        <% end %>

        <div class="mt-6 pb-2 flex items-center gap-2">
          <%= button_tag t('.submit'), class: button_classes("text-base", size: :lg, color: :warning) %>
          <%= modal.close_link(t('identity.cancel'), identity_profile_path, class: button_classes("text-base", size: :lg)) %>
        </div>
      <% end %>
    <% end %>
  <% end %>
<% end %>
